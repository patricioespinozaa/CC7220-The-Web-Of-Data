@prefix ex: <http://ex.org/> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix fnml: <http://semweb.mmlab.be/ns/fnml#> .
@prefix fno: <https://w3id.org/function/ontology#> .
@prefix grel: <http://users.ugent.be/~bjdmeest/function/grel.ttl#> .


<ex:LogicalSource>
    a rml:LogicalSource;
    rml:source "clean_data.csv";
    rml:referenceFormulation ql:CSV.

<ex:TriplesMap>
    a rr:TriplesMap;
    rml:logicalSource <ex:LogicalSource>;

    # Define the subject URI for each movie based on the title
    rr:subjectMap [
        rr:template "http://ex.org/{title}";
    ];

    # Predicate-object mappings for core properties
    rr:predicateObjectMap [
        rr:predicate ex:title;
        rr:objectMap [ rml:reference "title" ];
    ];
    rr:predicateObjectMap [
        rr:predicate ex:type;
        rr:objectMap [ rml:reference "type" ];
    ];
    rr:predicateObjectMap [
        rr:predicate ex:releaseYear;
        rr:objectMap [ rml:reference "releaseYear"; rr:datatype xsd:gYear ];
    ];

    # Split the available countries column
    rr:predicateObjectMap [
        rr:predicate ex:availableCountry;
        rr:objectMap <ex:AvailableCountriesFunctionMap>;
    ];

    # Split the genres column
    rr:predicateObjectMap [
        rr:predicate ex:genre;
        rr:objectMap <ex:GenreFunctionMap>;
    ];

    # Add the "platform" property
    rr:predicateObjectMap [
        rr:predicate ex:platform;
        rr:objectMap [ rr:constant "HBO" ];
    ].

<ex:GenreFunctionMap>
    fnml:functionValue [
        rml:logicalSource <ex:LogicalSource>;
        rr:predicateObjectMap [
            rr:predicate fno:executes;
            rr:objectMap [ rr:constant grel:string_split ];
        ];
        rr:predicateObjectMap [
            rr:predicate grel:valueParameter;
            rr:objectMap [ rml:reference "genres" ];
        ];
        rr:predicateObjectMap [
            rr:predicate grel:p_string_sep;
            rr:objectMap [ rr:constant ", " ]; # Split on comma and space
        ];
    ].

<ex:AvailableCountriesFunctionMap>
    fnml:functionValue [
        rml:logicalSource <ex:LogicalSource>;
        rr:predicateObjectMap [
            rr:predicate fno:executes;
            rr:objectMap [ rr:constant grel:string_split ];
        ];
        rr:predicateObjectMap [
            rr:predicate grel:valueParameter;
            rr:objectMap [ rml:reference "availableCountries" ];
        ];
        rr:predicateObjectMap [
            rr:predicate grel:p_string_sep;
            rr:objectMap [ rr:constant ", " ]; # Split on comma and space
        ];
    ].